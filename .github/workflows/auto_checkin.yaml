name: Auto Checkin Job

on:
  schedule:
    - cron: '0 22 * * *'  # UTC 时间 22:00 对应北京时间 6:00
  workflow_dispatch:

jobs:
  auto-sign:
    runs-on: ubuntu-latest

    steps:
      # 1. 检出代码
      - name: Checkout code
        uses: actions/checkout@v3

      # 2. 设置 Python 环境并启用缓存
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          cache: 'pip'  # 启用 pip 缓存
          cache-dependency-path: 'requirements.txt'  # 依赖文件的路径

      # 3. 安装依赖（自动使用缓存）
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      # 4. 生成随机分钟值并等待
      - name: Generate random minute and wait
        id: random_wait
        run: |
          # 生成 1 到 10 之间的随机分钟值
          RANDOM_MINUTE=$((RANDOM % 10))
          echo "随机分钟值: $RANDOM_MINUTE"

          # 获取当前分钟值
          CURRENT_MINUTE=$(date +%M)

          # 计算需要等待的时间（秒）
          if [ "$CURRENT_MINUTE" -gt "$RANDOM_MINUTE" ]; then
            # 如果当前分钟已经超过目标分钟，等待到下一小时
            WAIT_SECONDS=$(( (60 - CURRENT_MINUTE + RANDOM_MINUTE) * 60 ))
            echo "当前分钟 ($CURRENT_MINUTE) 已超过目标分钟 ($RANDOM_MINUTE)，等待到下一小时。"
          else
            # 否则，等待到目标分钟
            WAIT_SECONDS=$(( (RANDOM_MINUTE - CURRENT_MINUTE) * 60 ))
            echo "当前分钟 ($CURRENT_MINUTE) 未超过目标分钟 ($RANDOM_MINUTE)，等待到目标时间。"
          fi

          echo "等待时间: $WAIT_SECONDS 秒"
          sleep $WAIT_SECONDS

      # 5. 运行脚本
      - name: Run auto checkin script
        id: run_script
        continue-on-error: true
        env:
          CONFIGS: ${{ secrets.CONFIGS }}
        run: |
          echo "任务在随机时间执行：$(date)"
          python main.py
